{"version":3,"sources":["app.js"],"names":["container","document","getElementById","ajax","XMLHttpRequest","content","createElement","URL_ADDR","CONTENT_URL","store","currentPage","getData","method","url","async","open","send","JSON","parse","response","getNewsFeed","newsFeed","newsList","push","i","id","title","comments_count","innerHTML","join","newsDetail","console","log","location","hash","substr","newsContent","replace","router","routePath","indexOf","Number","window","addEventListener"],"mappings":"AAAA,IAAMA,SAAS,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAlB,EAAmD;;AACnD,IAAMC,IAAI,GAAG,IAAIC,cAAJ,EAAb,EAAmC;;AACnC,IAAMC,OAAO,GAAGJ,QAAQ,CAACK,aAAT,CAAuB,KAAvB,CAAhB;AACA,IAAMC,QAAQ,GAAG,sCAAjB;AACA,IAAMC,WAAW,GAAG,wCAApB,EAA8D;AAE9D;;AACA,IAAMC,KAAK,GAAG;EACVC,WAAW,EAAG;AADJ,CAAd;;AAIA,SAASC,OAAT,CAAiBC,MAAjB,EAAyBC,GAAzB,EAA8BC,KAA9B,EAAqC;EACjCX,IAAI,CAACY,IAAL,CAAUH,MAAV,EAAkBC,GAAlB,EAAuBC,KAAvB,EADiC,CACF;;EAC/BX,IAAI,CAACa,IAAL,GAFiC,CAEpB;;EAEb,OAAOC,IAAI,CAACC,KAAL,CAAWf,IAAI,CAACgB,QAAhB,CAAP;AACH;;AAED,SAASC,WAAT,GAAuB;EACnB,IAAMC,QAAQ,GAAGV,OAAO,CAAC,KAAD,EAAQJ,QAAR,EAAkB,KAAlB,CAAxB,CADmB,CAC+B;;EAClD,IAAMe,QAAQ,GAAG,EAAjB,CAFmB,CAEE;;EACrBA,QAAQ,CAACC,IAAT,CAAc,MAAd;;EAEA,KAAK,IAAIC,CAAC,GAAG,CAACf,KAAK,CAACC,WAAN,GAAoB,CAArB,IAA0B,EAAvC,EAA2Cc,CAAC,GAAGf,KAAK,CAACC,WAAN,GAAoB,EAAnE,EAAuEc,CAAC,EAAxE,EAA4E;IACxEF,QAAQ,CAACC,IAAT,wDAGsBF,QAAQ,CAACG,CAAD,CAAR,CAAYC,EAHlC,kCAIUJ,QAAQ,CAACG,CAAD,CAAR,CAAYE,KAJtB,eAIgCL,QAAQ,CAACG,CAAD,CAAR,CAAYG,cAJ5C;EAQH;;EAEDL,QAAQ,CAACC,IAAT,CAAc,OAAd;EACAD,QAAQ,CAACC,IAAT,iDAEsBd,KAAK,CAACC,WAAN,GAAoB,CAF1C,8EAGsBD,KAAK,CAACC,WAAN,GAAoB,CAH1C;EAOAV,SAAS,CAAC4B,SAAV,GAAsBN,QAAQ,CAACO,IAAT,CAAc,EAAd,CAAtB,CAxBmB,CAwBsB;AAC5C;;AAED,SAASC,UAAT,GAAsB;EAClBC,OAAO,CAACC,GAAR,CAAY,cAAZ;EACAD,OAAO,CAACC,GAAR,CAAYC,QAAQ,CAACC,IAArB,EAFkB,CAEU;;EAE5B,IAAMT,EAAE,GAAGQ,QAAQ,CAACC,IAAT,CAAcC,MAAd,CAAqB,CAArB,CAAX,CAJkB,CAIkB;;EACpC,IAAMC,WAAW,GAAGzB,OAAO,CAAC,KAAD,EAAQH,WAAW,CAAC6B,OAAZ,CAAoB,KAApB,EAA2BZ,EAA3B,CAAR,EAAwC,KAAxC,CAA3B;EAEAzB,SAAS,CAAC4B,SAAV,2BACUQ,WAAW,CAACV,KADtB;AAOH;;AAED,SAASY,MAAT,GAAkB;EACd,IAAMC,SAAS,GAAGN,QAAQ,CAACC,IAA3B;;EAEA,IAAGK,SAAS,KAAK,EAAjB,EAAqB;IACjB;IACAnB,WAAW;EACd,CAHD,MAIK,IAAImB,SAAS,CAACC,OAAV,CAAkB,SAAlB,KAAgC,CAApC,EAAuC;IACxC/B,KAAK,CAACC,WAAN,GAAoB+B,MAAM,CAACF,SAAS,CAACJ,MAAV,CAAiB,CAAjB,CAAD,CAA1B;IACAf,WAAW;EACd,CAHI,MAIA;IACDU,UAAU;EACb;AACJ;;AAEDY,MAAM,CAACC,gBAAP,CAAwB,YAAxB,EAAsCL,MAAtC,GAA+C;;AAC/CA,MAAM","file":"app.c328ef1a.js","sourceRoot":"..","sourcesContent":["const container = document.getElementById('root'); // find root tag\nconst ajax = new XMLHttpRequest(); // ajax 출력 결과 반환\nconst content = document.createElement('div');\nconst URL_ADDR = 'https://api.hnpwa.com/v0/news/1.json';\nconst CONTENT_URL = 'https://api.hnpwa.com/v0/item/@id.json'; // 해당 콘텐츠의 url\n\n// 공유 자원 관리\nconst store = {\n    currentPage : 1,\n};\n\nfunction getData(method, url, async) {\n    ajax.open(method, url, async); // 동기 or 비동기 방식으로 서버 요청 값 처리\n    ajax.send(); // 데이터를 가져오는 작업\n\n    return JSON.parse(ajax.response);\n}\n\nfunction getNewsFeed() {\n    const newsFeed = getData('GET', URL_ADDR, false); // json 데이터 객체 변환 후 리턴\n    const newsList = []; // empty array\n    newsList.push('<ul>');\n    \n    for (let i = (store.currentPage - 1) * 10; i < store.currentPage * 10; i++) {\n        newsList.push(\n        `\n        <li>\n            <a href=\"#/show/${newsFeed[i].id}\">\n                ${newsFeed[i].title} (${newsFeed[i].comments_count})\n            </a>\n        </li>\n        `);\n    }\n    \n    newsList.push('</ul>');\n    newsList.push(`\n    <div>\n        <a href=\"#/page/${store.currentPage - 1}\">이전 페이지</a>\n        <a href=\"#/page/${store.currentPage + 1}\">다음 페이지</a>\n    </div>\n    `);\n    \n    container.innerHTML = newsList.join(''); // 배열의 내용을 하나의 문자열로 합쳐주는 함수 join() 사용, 기본 구분자 제거\n}\n\nfunction newsDetail() {\n    console.log('hash changed')\n    console.log(location.hash); // location 객체의 hash 값 확인 #3029303929 와 같은 방식으로 값 반환\n\n    const id = location.hash.substr(1); // # 이후의 내용 저장\n    const newsContent = getData('GET', CONTENT_URL.replace('@id', id), false);\n\n    container.innerHTML = `\n        <h1>${newsContent.title}</h1>\n\n        <div>\n            <a href=\"#\">목록으로</a>\n        </div>\n    `;\n}\n\nfunction router() {\n    const routePath = location.hash;\n\n    if(routePath === '') {\n        // location.hash === # 일 경우 빈 값 반환\n        getNewsFeed();\n    }\n    else if (routePath.indexOf('#/page/') >= 0) {\n        store.currentPage = Number(routePath.substr(7));\n        getNewsFeed();\n    }\n    else {\n        newsDetail();\n    }\n}\n\nwindow.addEventListener('hashchange', router); // router : hash의 변경마다 보여줌\nrouter();"]}